"use strict";
/*
 * Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License").
 * You may not use this file except in compliance with the License.
 * A copy of the License is located at
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * or in the "license" file accompanying this file. This file is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 * express or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * return the string with all invalid XML characters escaped
 * @param input
 */
function escapeXmlCharacters(input) {
    var invalidXmlCharactersMapping = {
        '&': '&amp;',
        '<': '&lt;',
        '>': '&gt;',
        '"': '&quot;',
        "'": '&apos;',
    };
    var invalidXmlCharactersMappingReverse = Object.keys(invalidXmlCharactersMapping).reduce(function (obj, key) {
        obj[invalidXmlCharactersMapping[key]] = key;
        return obj;
    }, {});
    // sanitize any already escaped character to ensure they are not escaped more than once
    var sanitizedInput = input.replace(/&amp;|&lt;|&gt;|&quot;|&apos;]/g, function (c) { return invalidXmlCharactersMappingReverse[c]; });
    return sanitizedInput.replace(/[&'"><]/g, function (c) { return invalidXmlCharactersMapping[c]; });
}
exports.escapeXmlCharacters = escapeXmlCharacters;
//# sourceMappingURL=SsmlUtils.js.map